// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducationDbContext))]
    partial class EducationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Education.Domain.Curso", b =>
                {
                    b.Property<Guid>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = new Guid("d2255fcf-51fb-4b53-8469-494c2ddfa201"),
                            Descripcion = "Curso de Test",
                            FechaCreacion = new DateTime(2022, 1, 17, 0, 41, 30, 549, DateTimeKind.Local).AddTicks(4682),
                            FechaPublicacion = new DateTime(2024, 1, 17, 0, 41, 30, 549, DateTimeKind.Local).AddTicks(4694),
                            Precio = 56m,
                            Titulo = "Curso de pruebas"
                        },
                        new
                        {
                            CursoId = new Guid("90f405bb-49d1-4382-9cda-38ae8f3757a8"),
                            Descripcion = "Docker",
                            FechaCreacion = new DateTime(2022, 1, 17, 0, 41, 30, 549, DateTimeKind.Local).AddTicks(4754),
                            FechaPublicacion = new DateTime(2072, 1, 17, 0, 41, 30, 549, DateTimeKind.Local).AddTicks(4756),
                            Precio = 560m,
                            Titulo = "Curso de Docker"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
